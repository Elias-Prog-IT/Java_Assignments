package oop;

import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 * 
 * @author Elias Posluk 
 * Student-id:(elpo7769)
 * @date 05/02/2017
 * Assignment
 * GUI.Java
 * Course: 2IS200 Introduction to programming with Java
 * Uppsala University
 * 
 */

public class GUI extends javax.swing.JFrame {

    // Veicle choices
    private static final String[] VEHICLE_CHOICES = {"Car", "Motorcycle", "Truck"};

    private Workshop workshop = new Workshop();

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        updateVehicleInWork();
        updateVehicleToCollect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRepairedVehicles = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtVehicleInWork = new javax.swing.JTextArea();
        btnAddWorkDone = new javax.swing.JButton();
        btnAddRepairedVehicle = new javax.swing.JButton();
        btnAddVehicle = new javax.swing.JButton();
        btnCheckout = new javax.swing.JButton();
        btnVehicleInfo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Vehicles ready to be collected");

        txtRepairedVehicles.setEditable(false);
        txtRepairedVehicles.setColumns(20);
        txtRepairedVehicles.setRows(5);
        jScrollPane1.setViewportView(txtRepairedVehicles);

        jLabel2.setText("Vehicles in Work");

        txtVehicleInWork.setEditable(false);
        txtVehicleInWork.setColumns(20);
        txtVehicleInWork.setRows(5);
        jScrollPane2.setViewportView(txtVehicleInWork);

        btnAddWorkDone.setText("Add Work Done");
        btnAddWorkDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddWorkDoneActionPerformed(evt);
            }
        });

        btnAddRepairedVehicle.setText("Add Vehicle to be Collected");
        btnAddRepairedVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRepairedVehicleActionPerformed(evt);
            }
        });

        btnAddVehicle.setText("Add a Vehicle");
        btnAddVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVehicleActionPerformed(evt);
            }
        });

        btnCheckout.setText("Check Out Vehicle");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });

        btnVehicleInfo.setText("Info About Vehicle");
        btnVehicleInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVehicleInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddWorkDone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddRepairedVehicle, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVehicleInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 221, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE))
                .addGap(58, 58, 58))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(502, 502, 502)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(48, 48, 48)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(40, 40, 40)
                    .addComponent(btnAddVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(572, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btnAddWorkDone)))
                .addGap(2, 2, 2)
                .addComponent(btnAddRepairedVehicle)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(btnVehicleInfo)
                        .addGap(18, 18, 18)
                        .addComponent(btnCheckout)))
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(440, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(99, 99, 99)
                    .addComponent(btnAddVehicle)
                    .addContainerGap(383, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddWorkDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddWorkDoneActionPerformed
        // read reg number
        String regNumber = JOptionPane.showInputDialog("Enter registration number of vehicle");

        // read sservice type
        JComboBox<Service> cbServices = new JComboBox<>(Service.values());
        JOptionPane.showOptionDialog(null, cbServices, "Please select service", JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE, null, new String[]{"Ok"}, "Ok");

        Service service = (Service) cbServices.getSelectedItem();

        //add work done
        try {
            workshop.addWorkDone(regNumber, service);
            JOptionPane.showMessageDialog(this, service.getName() + " done on vehicle with reg number " + regNumber);
        } catch (RuntimeException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

    }//GEN-LAST:event_btnAddWorkDoneActionPerformed

    private void btnAddRepairedVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRepairedVehicleActionPerformed

        // read reg number
        String regNumber = JOptionPane.showInputDialog("Enter registration number of vehicle");
        try {
            // add to repaired
            workshop.addToRepaired(regNumber);
            JOptionPane.showMessageDialog(this, "Vehicle with reg number " + regNumber + " is ready to be calculated");
        } catch (RuntimeException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

        updateVehicleInWork();
        updateVehicleToCollect();
    }//GEN-LAST:event_btnAddRepairedVehicleActionPerformed

    private void btnAddVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVehicleActionPerformed
        boolean exit = false;
        while (!exit) {
            Vehicle vehicle = readVehicleDetails(); // read details
            if (vehicle != null) {
                workshop.addVehicle(vehicle);
                JOptionPane.showMessageDialog(this, "Vehicle with registeration number " + vehicle.getRegNumber() + " added to list");
            }

            // ask if user want to add more
            int choice = JOptionPane.showConfirmDialog(this, "Do you want to register more vehicles? ");
            if (choice != JOptionPane.YES_OPTION) {
                exit = true;
            }
        }

        updateVehicleInWork();
    }//GEN-LAST:event_btnAddVehicleActionPerformed

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed

        // read eg number
        String regNumber = JOptionPane.showInputDialog("Enter registration number of vehicle");
        try {
            // check out
            Vehicle checkedOut = workshop.checkOut(regNumber);
            JOptionPane.showMessageDialog(this, "Vehicle with reg number " + regNumber + " is checked out.\n Total cost is $" + checkedOut.totalCost());
        } catch (RuntimeException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

        updateVehicleToCollect();
    }//GEN-LAST:event_btnCheckoutActionPerformed

    private void btnVehicleInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVehicleInfoActionPerformed
        String regNumber = JOptionPane.showInputDialog("Enter registration number of vehicle");
        Vehicle searched = workshop.search(regNumber);

        if (searched == null) {
            JOptionPane.showMessageDialog(this, "Error: The sJerached vehicle is not found");
        } else {
            JOptionPane.showMessageDialog(this, searched.toString());
        }
    }//GEN-LAST:event_btnVehicleInfoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // update vehicle in work text area
    private void updateVehicleInWork() {
        ArrayList<Vehicle> vehicles = workshop.getVehicles(false);
        txtVehicleInWork.setText("");
        for (Vehicle vehicle : vehicles) {
            txtVehicleInWork.append(vehicle.getType() + " " + vehicle.getRegNumber() + "\n");
        }
    }

    // update vehicle to be collected list
    private void updateVehicleToCollect() {
        ArrayList<Vehicle> vehicles = workshop.getVehicles(true);
        txtRepairedVehicles.setText("");
        for (Vehicle vehicle : vehicles) {
            txtRepairedVehicles.append(vehicle.getType() + " " + vehicle.getRegNumber() + "\n");
        }
    }

    // read car details from user
    public static Vehicle readVehicleDetails() {
        // read vehicle details

        String regNumber = JOptionPane.showInputDialog("Enter registration number of car");

        // read model year
        int modelYear;
        try {
            modelYear = Integer.parseInt(JOptionPane.showInputDialog("Enter model's year"));
        } catch (NumberFormatException e) { // invalid model year
            JOptionPane.showMessageDialog(null, "Error: Only numerics are allowed for the model year");
            return null;
        }

        // read brand and owner
        String brand = JOptionPane.showInputDialog("Enter brand of car");
        String owner = JOptionPane.showInputDialog("Enter owner of car");

        JComboBox<String> cbTypes = new JComboBox<>(VEHICLE_CHOICES);

        JOptionPane.showOptionDialog(null, cbTypes, "Please select vehicle type", JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE, null, new String[]{"Ok"}, "Ok");

        int choice = cbTypes.getSelectedIndex();

        // create selected vehicle
        if (choice == 0) {
            return new Car(regNumber, brand, owner, modelYear);
        } else if (choice == 1) {
            return new Motorcycle(regNumber, brand, owner, modelYear);
        } else {
            return new Truck(regNumber, brand, owner, modelYear);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRepairedVehicle;
    private javax.swing.JButton btnAddVehicle;
    private javax.swing.JButton btnAddWorkDone;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnVehicleInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtRepairedVehicles;
    private javax.swing.JTextArea txtVehicleInWork;
    // End of variables declaration//GEN-END:variables
}